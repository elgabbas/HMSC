// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Solve1
arma::mat Solve1(const arma::mat& x);
RcppExport SEXP _Hmsc_Solve1(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Solve1(x));
    return rcpp_result_gen;
END_RCPP
}
// Solve2
arma::mat Solve2(const arma::mat& A, const arma::mat& B);
RcppExport SEXP _Hmsc_Solve2(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(Solve2(A, B));
    return rcpp_result_gen;
END_RCPP
}
// Solve2vect
arma::vec Solve2vect(const arma::mat& A, const arma::vec& B);
RcppExport SEXP _Hmsc_Solve2vect(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(Solve2vect(A, B));
    return rcpp_result_gen;
END_RCPP
}
// fast_pnorm
NumericVector fast_pnorm(NumericVector x);
RcppExport SEXP _Hmsc_fast_pnorm(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(fast_pnorm(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Hmsc_Solve1", (DL_FUNC) &_Hmsc_Solve1, 1},
    {"_Hmsc_Solve2", (DL_FUNC) &_Hmsc_Solve2, 2},
    {"_Hmsc_Solve2vect", (DL_FUNC) &_Hmsc_Solve2vect, 2},
    {"_Hmsc_fast_pnorm", (DL_FUNC) &_Hmsc_fast_pnorm, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_Hmsc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
